---
title: "eds221-day7-morning"
format: html
editor: visual
---

```{r}
library(tidyverse)
library(palmerpenguins)
library(lubridate)
library(dplyr)
library(datapasta)
```

# Data wrangling refresher

1.  starting from penguins, write a single piped sequence in which you:
    -   only include penguins at Dream and Biscoe islands

    -   Remove the year and sex variables

    -   add a new column body_mass_kg with penguin mass converted from g to kg

    -   Rename the island variable to location

```{r}
penguins %>%
  filter(island %in% c("Dream", "Biscoe")) %>% 
  select(-year, -sex) %>% 
  mutate(body_mass_kg = body_mass_g/1000) %>% 
  dplyr::rename(location = island)
  






```

# starting from penguins, write a single piped sequence to:

-   limit to Adelie penguins

-   Remove any observations where flipper_length_mm is NA(!is.na()) or drop_na()

-   Group the data by sex

-   Create a summary table that contains the mean, standard deviation, and sample size of flipper lengths for male and female adelie penguins.

```{r}

penguins %>%  
  filter(species == "Adelie") %>% 
  drop_na(flipper_length_mm) %>% 
  group_by(sex) %>%
  summarize(mean_flip_length = mean(flipper_length_mm, na.rm = TRUE),
            sd_flip_length = sd(flipper_length_mm, na.rm = TRUE), 
            sample_size = n())



```

```{r}
animals <- data.frame(
  stringsAsFactors = FALSE,
          location = c("lagoon", "bluff", "creek", "oaks", "bluff"),
           species = c("bobcat", "coyote", "fox", "squirrel", "bobcat"),
          maturity = c("adult", "juvenile", "adult", "juvenile", "adult")
 )
```

```{r}
sites <- data.frame(
  stringsAsFactors = FALSE,
          location = c("beach", "lagoon", "bluff", "oaks"),
    full_site_name = c("Goleta Beach","UCSB Lagoon",
                       "Ellwood Mesa","Fremont Campground"),
      jurisdiction = c("SB City", "UCSB", "SB City", "USFS")
)
```

## Full join: 

Uses full_join()

```{r}
full_join_example <- full_join(animals, sites)
```

```{r}
left_join_example <- left_join(animals, sites)
```

```{r}
full_join_example
```

# Date-times with lubridate() 

ymd: if date is in year-month-day

mdy: if date is in month-day-year

dmy: if date is in date-month-year

```{r}
mdy("03-15-1998")
```

```{r}

my_date_2 <- lubridate::mdy("11/7/2003")
my_date_3 <- lubridate::dmy("08-Jun-1974")

my_date_2
```

```{r}
time_1 <- lubridate::ymd_hm("2020-08-12 11:18")
```

parse June 2, 1982 at 4pm UTC 916:00) as a date in R.

```{r}
time_example <- lubridate::mdy_hm("June 2, 1982 4:00 PM")
```

```{r}
now <- with_tz(Sys.time())
day_now <- day(now)
print(day_now)
```

```{r}
urchin_counts <- data.frame(
  date = c("Oct 12, 2004", "October 18, 2007", "Feb 12, 2003", "Feb 14, 2008"), species = c("purple", "red", "red", "red"), 
  size_mm = c(19, 24, 18, 11)
)
class(urchin_counts$date)
```

```{r}
urchin_mean_by_month <- urchin_counts %>% 
  mutate(date = lubridate::mdy(date)) %>% 
  mutate(month = lubridate::month(date)) %>% 
  group_by(month) %>% 
  summarize(mean_size = mean(size_mm))
```

## Strings with stringr 

Use str_detect to detect a string pattern

```{r}
my_string <- "Teddy loves salmon and kibble and toys"
str_detect(my_string, pattern = "kibble")
```

```{r}
str_detect(my_string, "hot weather")
```

subset of data that only contains rows if the name contains skywalker

```{r}
starwars %>% 
  filter(str_detect(name, pattern = "Skywalker"))
```

```{r}
starwars %>% 
  mutate(name_new = str_replace(name, pattern = "Sky", replacement = "Fire"))
```

```{r}
my_string_3 <- "Hi my name is Teddy"

```

```{r}
str_to_lower(my_string_3)
```
